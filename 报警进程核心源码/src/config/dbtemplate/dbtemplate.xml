<?xml version="1.0" encoding="UTF-8"?>
<template>
	
<group tablespace="alarm">
	<!-- 根据卫星编号和遥测查询门限报警规则 -->
	<statement id="selectLimitRuleBySat">
<!--		select t.* from (-->
<!--			select ruleid, sat_id, tm_param_id, tm_param_name, tm_param_code, -->
<!--				canalarm, judgetype, judgecount, rulecontent, create_time, create_user, rownum n-->
<!--			from limit_rule_view-->
<!--			where judgetype=#judgetype# and sat_id = #satid# and (islike('tm_param_name',#key#) > 0 or islike('tm_param_code',#key#) > 0)-->
<!--			order by create_time) t-->
<!--		where n>#start# and n<=#start#+#limit# -->
	<![CDATA[
	      select tm.TMID tm_param_id,tm.TMNAME tm_param_name,tm.TMCODE tm_param_code,tm.SATID sat_id,tm.JUDGETYPE,
	      ruleInfo.ruleid,ruleInfo.CANALARM,ruleInfo.RULECONTENT,
	      ruleInfo.JUDGECOUNT,rownum n,ytm.tm_param_type
	      from ALARM_TM_INFO tm
        left join tm ytm on ytm.tm_param_id = tm.tmid
	      left join  (select * from ALARM_RULE_INFO where judgetype = 0 ) ruleInfo
	      on tm.tmid = ruleInfo.Tmid
	      where tm.judgetype = 0
	      and tm.satid = #satid#
	      and (islike(tm.TMNAME,#key#) > 0 OR islike(tm.TMCODE,#key#) > 0)
	       order by tm.TMID
	]]>
	</statement>
	<statement id="getLimitRuleCount">
	<![CDATA[
	select count(*) count from (
			select tm.TMID tm_param_id,tm.TMNAME tm_param_name,tm.TMCODE tm_param_code,tm.SATID sat_id,tm.JUDGETYPE,
	      ruleInfo.ruleid,ruleInfo.CANALARM,ruleInfo.RULECONTENT,
	      ruleInfo.JUDGECOUNT,rownum n
	      from ALARM_TM_INFO tm
	      left join ALARM_RULE_INFO ruleInfo
	      on tm.tmid = ruleInfo.Tmid
	      where tm.judgetype = #judgetype#
	      and tm.satid = #satid#
	      and islike(tm.TMNAME,#key#) > 0
	      order by create_time desc
	)
	]]>
	</statement>
	
	<!-- 根据卫星编号和遥测查询状态字报警规则    孟祥超 修改-->
	<statement id="selectStateRuleBySatid">
<!--		select t.* from (
			select ruleid, sat_id, tm_param_id, tm_param_name, tm_param_code, 
				canalarm, judgetype, judgecount, rulecontent, create_time, create_user, rownum n
			from limit_rule_view
			where judgetype=2 and sat_id = #satid# and (islike('tm_param_name',#key#) > 0 or islike('tm_param_code',#key#) > 0)
			order by create_time) t
		where n>#start# and n<=#start#+#limit# 
-->
	<![CDATA[
		select * from ALARM_TM_INFO where judgetype = #judgetype# 
		and satid = #satid#  
		and (islike(TMNAME,#key#) > 0 or islike(TMCODE,#key#) > 0)
		order by tmid
	]]>
	</statement>
	
	<statement id="queryStateRuleListByTM">
	<![CDATA[
		select * from ALARM_RULE_INFO where judgetype = 2 and tmid = #tmid# order by create_time desc
	]]>
	</statement>
	
	<statement id="querySonStateRule">
	<![CDATA[
		select ALARM_RULE_INFO.*,tm.tm_param_name,tm.tm_param_code from ALARM_RULE_INFO,tm 
		where tm.tm_param_id = ALARM_RULE_INFO.tmid and
		ALARM_RULE_INFO.judgetype = 2 and ALARM_RULE_INFO.ruleid = #ruleId#
	]]>
	</statement>
	
	<statement id="getStateRuleCount">
<!--		select count(*) count -->
<!--		from limit_rule_view-->
<!--		where judgetype=2 and sat_id = #satid# and (islike('tm_param_name',#key#) > 0 or islike('tm_param_code',#key#) > 0)-->
	<![CDATA[
		select count(*) count from ALARM_TM_INFO where judgetype=2  order by tmid desc
	]]>
	</statement>
	
	<!-- 根据卫星编号和遥测编号查询报警规则 -->
	<statement id="selectStateRuleBySat">
	<![CDATA[
			select ruleid, sat_id, tm_param_id, tm_param_name, tm_param_code, 
				canalarm, judgetype, judgecount, rulecontent, create_user,create_time
			from limit_rule_view
			where sat_id = #satid# and tm_param_id = #tmId#
			and case when #judgetype# is null then 1=1 else judgetype = #judgetype# end
			and case when #canalarm# is null then 1=1 else canalarm = #canalarm# end
			order by create_time
	]]>
	</statement>
	
	<!-- 根据主键查询报警规则 
		孟祥超 修改  没有规则使用-->
	<statement id="getRuleByTmId">
<!--			select ruleid, sat_id, tm_param_id, tm_param_name, tm_param_code, -->
<!--				canalarm, judgetype, judgecount, rulecontent-->
<!--			from limit_rule_view-->
<!--			where ruleid = #ruleid#-->
	<![CDATA[
		select tm.TMID tm_param_id,tm.TMNAME tm_param_name,tm.TMCODE tm_param_code,tm.SATID sat_id,tm.JUDGETYPE
          from ALARM_TM_INFO tm
          where tm.judgetype = 0
          and tm.tmid = #tmid#
	]]>
	</statement>
	
		
	<!-- 根据主键查询报警规则 
		孟祥超 修改  有规则使用-->
	<statement id="getRuleById">
	<![CDATA[
		select tm.TMID tm_param_id,tm.TMNAME tm_param_name,tm.TMCODE tm_param_code,tm.SATID sat_id,tm.JUDGETYPE,
	        ruleInfo.ruleid,ruleInfo.CANALARM,ruleInfo.RULECONTENT,
	        ruleInfo.JUDGECOUNT
	        from ALARM_TM_INFO tm
	        left join ALARM_RULE_INFO ruleInfo
	        on tm.tmid = ruleInfo.Tmid
	        where tm.judgetype = 0
          and tm.tmid = #tmid# and ruleInfo.ruleid = #ruleid#
	]]>
	</statement>

	<!-- 添加遥测报警信息 -->
    <statement id="insertTmAlarmInfo">
		insert into alarm_tm_info
			(satid, tmid, tmname, tmcode, judgetype)
		values
			(sys_guid(), #satid#, #tmid#, #tmname#, #tmcode#,  #judgetype#)
	</statement>
	<!-- 添加门限或状态字报警规则信息  
		孟祥超 update dataseq.nextval 修改为#ruleid#-->
    <statement id="insertTmRuleInfo">
		insert into ALARM_RULE_INFO
			(ruleid, tmid, canalarm, judgetype, rulecontent, judgecount,
				create_time
			)
		values
			(#ruleid#, #tmid#, #canalarm#,  #judgetype#, #rulecontent#,  #judgecount#,
				to_char(sysdate,'yyyy-MM-dd HH24:MI:SS')
			)
	</statement>
	
	<!-- 修改门限或状态字报警规则信息 -->
	<statement id="updateTmRuleInfo">
		update ALARM_RULE_INFO
		   set rulecontent = #rulecontent#,
		       judgecount = #judgecount#,
		       canalarm = #canalarm#
		 where ruleid = #ruleid#
	</statement>
	
	<!-- 修改是否报警 -->
	<statement id="updateTmCanAlarm">
		update ALARM_RULE_INFO
		   set canalarm = #canalarm#
		 where tmid = #tmid# and ruleid != #ruleid#
	</statement>
	
	<!-- 删除门限或状态字报警规则信息 -->
	<statement id="deleteTmRuleInfo">
		delete ALARM_RULE_INFO
		 where ruleid = #ruleid#
	</statement>
	
	<!-- 设置是否报警 -->
	<statement id="updateTmRuleCanalarmByTm">
		update ALARM_RULE_INFO
		   set canalarm = case when #canalarm# = 0 then 1 else 0 end
		 where tmid = #tmid#
	</statement>
	<statement id="updateTmRuleCanalarmById">
		update ALARM_RULE_INFO
		   set canalarm = #canalarm#
		 where ruleid = #ruleid#
	</statement>
	 
	<!-- 设置报警类型 -->
	<statement id="updateTmAlarmJudgetype">
		update alarm_tm_info
		   set judgetype = #judgetype#
		 where tmid = #tmid#
	</statement>
	
	<!-- 改为不报警 -->
	<statement id="updateToNoAlarm">
		update alarm_rule_info
		   set canalarm = '1' 
		where judgetype = #judgetype#
		and tmid = #tmid#
	</statement>
	 
	<!-- 查询所有系统配置信息 -->
	<statement id="findGlobalConfig">
	<![CDATA[
		select configitem, content from global_config
		 where islike('configitem',#key#) > 0
	]]>
	</statement>
	 
	<!-- 查询系统配置信息 -->
	<statement id="getGlobalConfig">
	<![CDATA[
		select configitem, content from global_config
		 where configitem = #configitem#
	]]>
	</statement>
	 
	<!-- 添加系统配置信息 -->
	<statement id="addGlobalConfig">
	
		insert into global_config
		  (configitem, content)
		values
		  (#configitem#, #content#);

	</statement>
	 
	<!-- 修改系统配置信息 -->
	<statement id="updateGlobalConfig">

		update global_config set content =#content# 
		 where configitem = #configitem#

	</statement>
	 
	<!-- 查询报警历史
		孟祥超 修改 
		 alarmmsg 条件sql部分
	 -->
	<statement id="findAlarmHistory">
	<![CDATA[
		 	select alarmid, s.sat_id, s.sat_name, s.sat_code, s.mid, 
		 	        to_char(begintime, 'yyyy-mm-dd HH24:mi:ss:ff') as begintime,
		 	        to_char(endtime, 'yyyy-mm-dd HH24:mi:ss:ff') as endtime,
		 		alarmlevel, alarmmsg, 
		 		to_char(responetime, 'yyyy-mm-dd HH24:mi:ss:ff') as responetime,
		 		u.user_id, u.user_name, response, 
		 		alarmvalue, 
		 		s.sat_name||'('||s.sat_code||')' satnamecode, 
		 		tm.tm_param_name||'('||tm.tm_param_code||')' tmnamecode
			from alarm_info ai, satellite s, users u,tm
			where ai.satid = s.sat_id and ai.userid = u.user_id and tm.tm_param_id = ai.tmid
			 and ai.endtime is not null
      		 and ai.responetime is not null
			 and satid = #satid#
			 and (islike(tm.tm_param_code,#paramName#) > 0 or islike(tm.tm_param_name,#paramName#) > 0)
			 and (begintime) >= case when #alarmStartTime# is null 
			  		then str2timestamp('0001-01-01 00:00:00.001') 
			  		else str2timestamp(#alarmStartTime#) end
			 and (begintime) < case when #alarmEndTime# is null 
			  		then str2timestamp('9999-12-31 23:59:59.999') 
			  		else str2timestamp(#alarmEndTime#) end
			order by begintime
	]]>
	</statement>
	
	<!-- 报警日志 -->
	<statement id="queryAlarmInfoLog">
	<![CDATA[
		  select PK_ID,SATCODE,SATNAME,TMCODE,
         TMNAME,to_char(ALARMTIME,'yyyy-mm-dd HH24:mi:ss:ff') ALARMTIME,ALARMLEVEL,ALARMMSG,TMVALUE,alarmlevelinfo,alarmlevelzh,
         SATNAME||'('||SATCODE||')' satnamecode,TMNAME||'('||TMCODE||')' tmnamecode
        from (select * from table(pkg_alarmhistory.queryHistory(#alarmid#)))
	]]>
	</statement>
	<!-- 报警日志（导出） -->
	<statement id="findAlarmInfoLogNoPage">
	<![CDATA[
		 select PK_ID,SATID,SATCODE,SATNAME,TMID,TMCODE,
		 		TMNAME,to_char(ALARMTIME,'yyyy-mm-dd HH24:mi:ss:ff') ALARMTIME,ALARMLEVEL,ALARMMSG,TMVALUE,
		 		SATNAME||'('||SATCODE||')' satnamecode,TMNAME||'('||TMCODE||')' tmnamecode
	      from ALARM_INFO_LOG
	      where satid = #satid#
			 and (islike(TMCODE,#paramName#) > 0 or islike(TMNAME,#paramName#) > 0)
	        and (ALARMTIME) >= case when #alarmStartTime# is null 
	            then str2timestamp('0001-01-01 00:00:00.001') 
	            else str2timestamp(#alarmStartTime#) end
	        and (ALARMTIME) < case when #alarmEndTime# is null 
	            then str2timestamp('9999-12-31 23:59:59.999') 
	            else str2timestamp(#alarmEndTime#) end
	      order by ALARMTIME desc
	]]>
	</statement>
	
	
	
	<statement id="queryAlarmPageList">
	<![CDATA[
	 	select ALARMPAGEID,PAGENAME from ALARM_PAGE order by ALARMPAGEID desc
	]]>
	</statement>
	
	<statement id="queryAlarmPageSatsList">
	<![CDATA[
	 	select SATELLITE.SAT_NAME,SATELLITE.SAT_ID from SAT_PAGE,SATELLITE 
		where  SATELLITE.SAT_ID = SAT_PAGE.SAT_ID
 		and SAT_PAGE.ALARMPAGEID = #alarmpageid#
	]]>
	</statement>
	
	<statement id="queryAlarmInfo">
	<![CDATA[
	 	select page.alarmpageid,page.pagename,
       		SATELLITE.Sat_Id sys_resource_id,SATELLITE.Sat_Name name,
       		SATELLITE.SAT_CODE code,SATELLITE.MID
	    from alarm_page page ,SAT_PAGE satPage,SATELLITE
	    where page.alarmpageid = satPage.Alarmpageid 
	    and satPage.Sat_Id = SATELLITE.Sat_Id
	    and page.alarmpageid = #pageId#
	]]>
	</statement>
		
	<statement id="updatePage">
	<![CDATA[
		update ALARM_PAGE set PAGENAME = #PAGENAME#
		where ALARMPAGEID = #ALARMPAGEID#
	]]>
	</statement>
			
	<statement id="deletePageSat">
	<![CDATA[
		delete SAT_PAGE
		where ALARMPAGEID = #ALARMPAGEID#
	]]>
	</statement>
	
	<statement id="addPageSat">
	<![CDATA[
		insert into SAT_PAGE(ALARMPAGEID,SAT_ID)values(#ALARMPAGEID#,#SAT_ID#)
	]]>
	</statement>
	
	<statement id="query_dataseq">
	<![CDATA[
		select dataseq.nextval pkid from dual
	]]>
	</statement>
	
	<statement id="addPage">
	<![CDATA[
		insert into ALARM_PAGE(ALARMPAGEID,PAGENAME)values(#ALARMPAGEID#,#PAGENAME#)
	]]>
	</statement>
	
	<statement id="deleteStateRule">
	<![CDATA[
		delete from ALARM_RULE_INFO 
		where ruleid = #ruleId#
	]]>
	</statement>
	
		
	<statement id="delete_alarmpage">
	<![CDATA[
		delete from ALARM_PAGE 
		where ALARMPAGEID = #alarmpageid#
	]]>
	</statement>
	<statement id="delete_sat_page">
	<![CDATA[
		delete from SAT_PAGE 
		where ALARMPAGEID = #alarmpageid#
	]]>
	</statement>
	
	<statement id="add_alarm_info_log">
	<![CDATA[
		insert into alarm_info_log(pk_id,satid,satcode
		,satname,tmid,tmcode,tmname,alarmtime,alarmlevel
		,alarmmsg,tmvalue)values(#pk_id#,#satid#,#satcode#
		,#satname#,#tmid#,#tmcode#,#tmname#,str2timestamp(#alarmtime#),#alarmlevel#
		,#alarmmsg#,#tmvalue#)
	]]>
	</statement>
</group>	



	<group tablespace="bassearchmapper">
	<statement id="findGrantUserGroupEquipmentTree">
		select  sv.* from sat_sub_alone_view sv where sv.owner_id=#sys_resource_id# and (islike(code,#key#)>0 or islike(name,#key#)>0);
	</statement>
	
	<!-- 查询遥测参数sql 孟祥超 -->
	<statement id="queryParamsInfo">
		<![CDATA[
			select distinct tm_param_code,tm_param_name,tm_param_id,
			tm_param_id tm_param_num,tm_param_type ,create_time,
			tm_param_num,rownum n 
			from tm_param_view where
			sat_id=#sat_id# 
			and (
				islike(tm_param_code,#tm_param_code#)>0 
				or islike(tm_param_name,#tm_param_name#)>0 
			) 
			order by tm_param_code
		]]>
	</statement>
	
	<statement id="findGrantUserGroupTmParam">
	<![CDATA[
		select t.* from(
			select s.*, rownum n from tm_param_view s
			where owner_id=#id# and (islike(tm_param_name,#key#)>0 or islike(tm_param_code,#key#)>0) 
			order by tm_param_code asc)t
		where n>=(#page#-1)*#pagesize#+1 and n<(#page#)*#pagesize#+1
	]]>		
	
	</statement>
	
		<statement id="getfindTmParamCount">
	select count(sv.tm_param_id) from(
				select t.* from(
			select s.*, rownum n from tm_param_view s
			where owner_id=#id# and (islike(tm_param_name,#key#)>0 or islike(tm_param_code,#key#)>0) 
			order by tm_param_code asc)t
			)sv
	</statement>
	
	<statement id="getTmParamsInfoById">
		<![CDATA[
	
		select distinct tm_param_code,tm_param_name,tm_param_id,tm_param_num,tm_param_type,tm_param_bdh
			from tm_param_view 
			where tm_param_id=#tm_param_id# 
				
		]]>
	
	</statement>
	
	<statement id="findGrantUserGroupTmParamById">
	
	<![CDATA[
	select ss.* from(
		select ssv.*,rownum n from(
		SELECT distinct tt.* FROM (
		select TM.TM_PARAM_NAME,TM.TM_PARAM_CODE,TM.TM_PARAM_TYPE,TM.STATUS,
		       SUB_ALONE_TM.TM_PARAM_ID,SUB_ALONE_TM.OWNER_ID SAT_ID,
		       SAT_SUB_ALONE_VIEW.NAME 
		from SUB_ALONE_TM,SAT_SUB_ALONE_VIEW,TM
		where SUB_ALONE_TM.OWNER_ID = SAT_SUB_ALONE_VIEW.SYS_RESOURCE_ID
		and TM.TM_PARAM_ID = SUB_ALONE_TM.Tm_Param_Id 
		union all
		select  TM.TM_PARAM_NAME,tm.tm_param_code,TM.TM_PARAM_TYPE,TM.STATUS,
		        TM.TM_PARAM_ID,TM.SAT_ID,
		        SAT_SUB_ALONE_VIEW.NAME 
		from TM,SAT_SUB_ALONE_VIEW 
		where TM.SAT_ID = SAT_SUB_ALONE_VIEW.SYS_RESOURCE_ID
		)tt 
		where tt.sat_id = #sat_id# AND TT.STATUS=0
			and (islike(tt.tm_param_code,#tm_param_code#)>0 
			and islike(tt.tm_param_name,#tm_param_name#)>0 
			and islike(tt.tm_param_type,#tm_param_type#)>0)
		 )ssv
		 order by ssv.TM_PARAM_ID
		) ss 
	where n>=(#page#-1)*#pageSize#+1 and n<(#page#)*#pageSize#+1
	]]>
	
	</statement>
	
	<!-- 关键字查询 -->
	<statement id="findGrantUserGroupTmParamById_keyquery">
	<![CDATA[
	select ss.* from(
		select ssv.*,rownum n from(
		SELECT distinct tt.* FROM (
		select TM.TM_PARAM_NAME,TM.TM_PARAM_CODE,TM.TM_PARAM_TYPE,TM.STATUS,
		       SUB_ALONE_TM.TM_PARAM_ID,SUB_ALONE_TM.OWNER_ID SAT_ID,
		       SAT_SUB_ALONE_VIEW.NAME 
		from SUB_ALONE_TM,SAT_SUB_ALONE_VIEW,TM
		where SUB_ALONE_TM.OWNER_ID = SAT_SUB_ALONE_VIEW.SYS_RESOURCE_ID
		and TM.TM_PARAM_ID = SUB_ALONE_TM.Tm_Param_Id 
		union all
		select  TM.TM_PARAM_NAME,tm.tm_param_code,TM.TM_PARAM_TYPE,TM.STATUS,
		        TM.TM_PARAM_ID,TM.SAT_ID,
		        SAT_SUB_ALONE_VIEW.NAME 
		from TM,SAT_SUB_ALONE_VIEW 
		where TM.SAT_ID = SAT_SUB_ALONE_VIEW.SYS_RESOURCE_ID
		)tt 
		where tt.sat_id = #sat_id# AND TT.STATUS=0
			and (islike(tt.tm_param_code,#tm_param_code#)>0 
			or islike(tt.tm_param_name,#tm_param_name#)>0)
		 )ssv
		 order by ssv.TM_PARAM_ID
		) ss 
	where n>=(#page#-1)*#pageSize#+1 and n<(#page#)*#pageSize#+1
	]]>
	
	</statement>
	
	<statement id="tmParamUpdate">
		update TM set tm_param_name=#tm_param_name#,tm_param_code=#tm_param_code#,tm_param_num=#tm_param_num#,tm_param_type=#tm_param_type#,tm_param_bdh=#tm_param_bdh# where tm_param_id=#tm_param_id#;
	</statement>
	
	<statement id="findSubNoParamBySubQueryPage">
	<![CDATA[
    	select sss.*,rownum n from (
               select  TM.TM_PARAM_NAME,tm.tm_param_code,TM.TM_PARAM_TYPE,TM.STATUS,TM.TM_PARAM_NUM,TM.TM_PARAM_ID
               from TM 
               where sat_id = #id# AND STATUS=0
               and (islike(tm_param_code,#key#)>0 or islike(tm_param_name,#key#)>0) 
  	 	)sss where sss.tm_param_id not in (select distinct tm_param_id from SUB_ALONE_TM where owner_id=#owner_id#)
		]]>
   <!--  select vv.* from(
    select sss.*,rownum n from (
           SELECT tt.* FROM (
            select TM.TM_PARAM_NAME,TM.TM_PARAM_CODE,TM.TM_PARAM_TYPE,TM.STATUS,TM.TM_PARAM_NUM,
                      SUB_ALONE_TM.TM_PARAM_ID,SUB_ALONE_TM.OWNER_ID SAT_ID,
                      SAT_SUB_ALONE_VIEW.NAME 
               from SUB_ALONE_TM,SAT_SUB_ALONE_VIEW,TM
               where SUB_ALONE_TM.OWNER_ID = SAT_SUB_ALONE_VIEW.SYS_RESOURCE_ID
               and TM.TM_PARAM_ID = SUB_ALONE_TM.Tm_Param_Id 
             
              union all
              
               select  TM.TM_PARAM_NAME,tm.tm_param_code,TM.TM_PARAM_TYPE,TM.STATUS,TM.TM_PARAM_NUM,
                     TM.TM_PARAM_ID,TM.SAT_ID,
                      SAT_SUB_ALONE_VIEW.NAME 
               from TM,SAT_SUB_ALONE_VIEW 
               where TM.SAT_ID = SAT_SUB_ALONE_VIEW.SYS_RESOURCE_ID

		        )tt 
		      where tt.sat_id = #id# AND TT.STATUS=0
	      			and (islike(tt.tm_param_code,#key#)>0 
					or islike(tt.tm_param_name,#key#)>0) 
       		)sss where sss.tm_param_id not in
       			(select distinct tm_param_view.tm_param_id from tm_param_view,tm where tm_param_view.owner_id=#owner_id# and tm.status=0)
       )vv where n>=(#page#-1)*#pagesize#+1 and n<(#page#)*#pagesize#+1 -->
	</statement>
	
	<statement id="getSubNoParamCount">
		select count(sss.tm_param_id) from(
		 SELECT tt.* FROM (
            select TM.TM_PARAM_NAME,TM.TM_PARAM_CODE,TM.TM_PARAM_TYPE,TM.STATUS,
                      SUB_ALONE_TM.TM_PARAM_ID,SUB_ALONE_TM.OWNER_ID SAT_ID,
                      SAT_SUB_ALONE_VIEW.NAME 
               from SUB_ALONE_TM,SAT_SUB_ALONE_VIEW,TM
               where SUB_ALONE_TM.OWNER_ID = SAT_SUB_ALONE_VIEW.SYS_RESOURCE_ID
               and TM.TM_PARAM_ID = SUB_ALONE_TM.Tm_Param_Id 
             
              union all
              
               select  TM.TM_PARAM_NAME,tm.tm_param_code,TM.TM_PARAM_TYPE,TM.STATUS,
                     TM.TM_PARAM_ID,TM.SAT_ID,
                      SAT_SUB_ALONE_VIEW.NAME 
               from TM,SAT_SUB_ALONE_VIEW 
               where TM.SAT_ID = SAT_SUB_ALONE_VIEW.SYS_RESOURCE_ID

		        )tt 
		      where tt.sat_id = #id# AND TT.STATUS=0
   	      			and islike(tt.tm_param_code,#key#)>0 
					and islike(tt.tm_param_name,#key#)>0 
       )sss 
       where sss.tm_param_id not in
       	(select distinct tm_param_view.tm_param_id from tm_param_view,tm where tm_param_view.owner_id=#owner_id# and tm.status=0)
	</statement>
	
	<statement id="findSubHasParamBySubQueryPage">
	<![CDATA[
	select ss.* from(
		 select s.*,rownum n from tm s where s.tm_param_id in(     
	 		select distinct TM_PARAM_ID from tm_param_view 
	      	where owner_id=#id# and (islike(tm_param_name,#key#)>0 or islike(tm_param_code,#key#)>0)
	      	) 
	      )ss
    where n>=(#page#-1)*#pagesize#+1 and n<(#page#)*#pagesize#+1 
	]]>
	</statement>
	
	
	<statement id="getSubHasParamCount">
	select count(t.tm_param_id) from(
	 select s.*,rownum n from tm s where s.tm_param_id in(     
	 select distinct TM_PARAM_ID from tm_param_view 
	      where owner_id=#id# and (islike(tm_param_name,#key#)>0 or islike(tm_param_code,#key#)>0) 
	      )
	  )t
	</statement>
	
	<statement id="getSatParamInfoCount" >
	<![CDATA[
    	select count(ss.tm_param_id) from(
		select ssv.* from(
		SELECT distinct tt.* FROM (
		select TM.TM_PARAM_NAME,TM.TM_PARAM_CODE,TM.TM_PARAM_TYPE,TM.STATUS,
		       SUB_ALONE_TM.TM_PARAM_ID,SUB_ALONE_TM.OWNER_ID SAT_ID,
		       SAT_SUB_ALONE_VIEW.NAME 
		from SUB_ALONE_TM,SAT_SUB_ALONE_VIEW,TM
		where SUB_ALONE_TM.OWNER_ID = SAT_SUB_ALONE_VIEW.SYS_RESOURCE_ID
		and TM.TM_PARAM_ID = SUB_ALONE_TM.Tm_Param_Id 
		union all
		select  TM.TM_PARAM_NAME,tm.tm_param_code,TM.TM_PARAM_TYPE,TM.STATUS,
		        TM.TM_PARAM_ID,TM.SAT_ID,
		        SAT_SUB_ALONE_VIEW.NAME 
		from TM,SAT_SUB_ALONE_VIEW 
		where TM.SAT_ID = SAT_SUB_ALONE_VIEW.SYS_RESOURCE_ID
		)tt 
		where tt.sat_id = #sat_id# AND TT.STATUS=0
			and islike(tt.tm_param_code,#tm_param_code#)>0 
			and islike(tt.tm_param_name,#tm_param_name#)>0 
			and islike(tt.tm_param_type,#tm_param_type#)>0
		 )ssv
		) ss 
	]]>
	</statement>
	
	<!-- 关键字查询 -->
		<statement id="getSatParamInfoCount_keyquery" >
	<![CDATA[
    	select count(ss.tm_param_id) from(
		select ssv.* from(
		SELECT distinct tt.* FROM (
		select TM.TM_PARAM_NAME,TM.TM_PARAM_CODE,TM.TM_PARAM_TYPE,TM.STATUS,
		       SUB_ALONE_TM.TM_PARAM_ID,SUB_ALONE_TM.OWNER_ID SAT_ID,
		       SAT_SUB_ALONE_VIEW.NAME 
		from SUB_ALONE_TM,SAT_SUB_ALONE_VIEW,TM
		where SUB_ALONE_TM.OWNER_ID = SAT_SUB_ALONE_VIEW.SYS_RESOURCE_ID
		and TM.TM_PARAM_ID = SUB_ALONE_TM.Tm_Param_Id 
		union all
		select  TM.TM_PARAM_NAME,tm.tm_param_code,TM.TM_PARAM_TYPE,TM.STATUS,
		        TM.TM_PARAM_ID,TM.SAT_ID,
		        SAT_SUB_ALONE_VIEW.NAME 
		from TM,SAT_SUB_ALONE_VIEW 
		where TM.SAT_ID = SAT_SUB_ALONE_VIEW.SYS_RESOURCE_ID
		)tt 
		where tt.sat_id = #sat_id# AND TT.STATUS=0
			and (islike(tt.tm_param_code,#tm_param_code#)>0 
			or islike(tt.tm_param_name,#tm_param_name#)>0)
		 )ssv
		) ss 
	]]>
	</statement>
	
	<statement id="tmParamDelete">
	update tm set status=1 where tm_param_id = #tm_param_id#
	</statement>
	
	<statement id="paramResourceUpdate">
	insert into sub_alone_tm(tm_param_id,owner_id)values(#id#,#owner_id#) 
	</statement>
	
	<statement id="paramDropToRightAll">
	insert into sub_alone_tm (tm_param_id, owner_id)
	select tm_param_id, #id# from tm_param_view 
	where owner_id=#owner_id# and (islike(tm_param_name,#key#)>0 or islike(tm_param_code,#key#)>0)
	</statement>
	
	<statement id="aloneParamDropToRightAll">
		update sub_alone_tm set owner_id=#owner_id# where sys_resource_id in (
			select tm_param_id from tmparam_notin_standalone_view where stand_alone_id=#id#
			and (islike(tm_param_code,#key#)>0 or islike(tm_param_name,#key#)>0 or islike(tm_param_num,#key#)>0)
		)
	</statement>
	<statement id="insertToAloneTm">
		insert into SUB_ALONE_TM 
		select tm_param_id,#owner_id# as owner_id from tm where sat_id = #id# 
		and (islike(tm_param_code,#key#) > 0
				or islike(tm_param_name,#key#) > 0)
	</statement>
	
	<statement id="paramDropToLeftAll">
		delete sub_alone_tm where owner_id= #owner_id#
	</statement>
	
	<statement id="ParamDropToLeft">
		delete sub_alone_tm where tm_param_id =#id# and owner_id = #owner_id#
	</statement>
	 
	<delete id="roleEquipmentDelete" >
		delete grant_role_resource where ug_id=#ug_id# and grant_type=0
	</delete>
	<insert id="grantRoleResourceAdd" >
		insert into  grant_role_resource(grant_id,sys_resource_id,ug_id,grant_manage_type,grant_type,grant_status,create_user,create_time,end_time) 
		values(sys_guid(),#sys_resource_id#,#ug_id#,#grant_manage_type#,#grant_type#,#grant_status#,#create_user#,TIMESTAMP2STR(sysdate),#end_time#)
	</insert>
	<select id="findRoleSatSubAloneTree" parameterType="java.lang.String" resultType="SatSubAlone">
		select * from sat_sub_alone_view where  owner_id=#sys_resource_id# 
		and sys_resource_id in ( select sys_resource_id from grant_role_resource where ug_id=#ug_id# and grant_type=0)
		order by name
	</select>

	 <!-- 航天器树sql mxc -->
	 <statement id="findSatTree">
	 	select t.* from (
       		select sat_sub_alone_view.*,name sat_name,code sat_code,sys_resource_id sat_id from sat_sub_alone_view where  type = 0   and ( islike(code,#key#)>0  or islike(name,#key#)>0 )
          union all
		    select son.*,father.name sat_name,father.code sat_code,father.sys_resource_id sat_id 
		    from sat_sub_alone_view son,sat_sub_alone_view father
		    where son.type = 5 and father.type = 0 and son.owner_id = father.sys_resource_id
		    and ( islike(father.code,#key#)>0  or islike(father.name,#key#)>0 )
    	union all 
		    select lastson.*,secondson.sat_name,secondson.sat_code,secondson.sat_id from sat_sub_alone_view lastson,
		       (
		          select son.*,father.name sat_name,father.code sat_code,father.sys_resource_id sat_id 
		           from sat_sub_alone_view son,sat_sub_alone_view father
		            where son.type = 5 and father.type = 0 and son.owner_id = father.sys_resource_id    
		            and ( islike(father.code,#key#)>0  or islike(father.name,#key#)>0 )
		       ) secondson
		    where lastson.type = 6 and lastson.owner_id = secondson.sys_resource_id
     	) t
		order by t.name
	</statement>
	</group>
	
	
	<group tablespace="engineregistrationmapper">
	<statement id="engineRegistrationQueryPage">
	select e.*,u.user_name create_user_name from engine e left join users u on e.create_user=u.user_id
	</statement>
	
	<statement id="findEngineId">
		select engine_id from engine where engine_name=#engine_name#
	</statement>
	
	 <statement id="engineRegistrationFind">
		select * from engine where engine_name=#engine_name# or engine_class=#engine_class#
	</statement>
	
		 <statement id="engineRegistrationAdd">
		insert into engine(engine_id,engine_class,engine_name,engine_comment,engine_version,create_user,create_time)
		values(#engine_id#,#engine_class#,#engine_name#,#engine_comment#,#engine_version#,#create_user#,to_char(sysdate,'yyyy-mm-dd hh24:mi:ss'))
	</statement>
	
	
	</group>
	
	
	<group tablespace="satsubalonemapper">
	
	<statement id="satList">
		select * from sat_sub_alone_view 
		where owner_id=#owner_id# and (islike(code,#key#)>0 or islike(name,#key#)>0)
		order by create_time desc
	</statement>
	
	<statement id="findGrantUserGroupEquipmentTree">
		select  sv.* from sat_sub_alone_view sv where sv.owner_id=#sys_resource_id# and (islike(code,#key#)>0 or islike(name,#key#)>0);
	</statement>
	
	<statement id="findGrantUserGroupTmParam">
		<![CDATA[
	
		select t.* 
			from (select * from tm where
				sat_id=#sat_id#
				and (islike(tm_param_code,#key#)>0 or islike(tm_param_name,#key#)>0) order by tm_param_code) t where rownum>#start# and rownum<=#start#+#limit#
		]]>
	
	</statement>
	
	 <statement id="findEquipmenList">
		select * from sat_sub_alone_view where type=#type#
	</statement>
	
	<statement id="findRoleEquipmentList" >
		select sys_resource_id from grant_role_resource where ug_id=#ug_id# and grant_type=0
	</statement>
	
		
		
		<statement id="findSatSubAloneTree">
		select * from sat_sub_alone_view where  owner_id=#sys_resource_id# and status!=1
		  <if test="key !=null and key!=''" > and ((type in ('0','5','6') and (upper(code) like '%'||upper(#{key})||'%' or upper(name) like '%'||upper(#{key})||'%') ) or type!=0) </if>
		order by name
		</statement>-->
	 
	<!--<delete id="roleEquipmentDelete" >
		delete grant_role_resource where ug_id=#ug_id# and grant_type=0
	</delete>
	<insert id="grantRoleResourceAdd" >
		insert into  grant_role_resource(grant_id,sys_resource_id,ug_id,grant_manage_type,grant_type,grant_status,create_user,create_time,end_time) 
		values(sys_guid(),#sys_resource_id#,#ug_id#,#grant_manage_type#,#grant_type#,#grant_status#,#create_user#,TIMESTAMP2STR(sysdate),#end_time#)
	</insert>
	<select id="findRoleSatSubAloneTree" parameterType="java.lang.String" resultType="SatSubAlone">
		select * from sat_sub_alone_view where  owner_id=#sys_resource_id# 
		and sys_resource_id in ( select sys_resource_id from grant_role_resource where ug_id=#ug_id# and grant_type=0)
		order by name
	</select>-->

	
	</group>

</template>